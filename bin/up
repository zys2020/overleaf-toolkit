#! /usr/bin/env bash

set -euo pipefail

#### Detect Toolkit Project Root ####
# if realpath is not available, create a semi-equivalent function
command -v realpath >/dev/null 2>&1 || realpath() {
  [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}
SCRIPT_PATH="$(realpath "${BASH_SOURCE[0]}")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"
TOOLKIT_ROOT="$(realpath "$SCRIPT_DIR/..")"
if [[ ! -d "$TOOLKIT_ROOT/bin" ]] || [[ ! -d "$TOOLKIT_ROOT/config" ]]; then
  echo "ERROR: could not find root of overleaf-toolkit project (inferred project root as '$TOOLKIT_ROOT')"
  exit 1
fi

function usage() {
  echo "Usage: bin/up [FLAGS...]"
  echo ""
  echo "A wrapper around 'docker-compose up'."
  echo ""
  echo "This program will pass any extra flags to docker-compose,"
  echo "for example: 'bin/up -d' will run in detached mode"
}

function check_config() {
  if [[ ! -f "$TOOLKIT_ROOT/config/overleaf.rc" ]] \
      || [[ ! -f "$TOOLKIT_ROOT/config/variables.env" ]]; then
    echo "Config files not found! exiting"
    exit 1
  fi
}

function __main__() {
  if [[ "${1:-null}" == "help" ]] || [[ "${1:-null}" == "--help" ]]; then
    usage
    exit
  fi
  check_config
  exec "$TOOLKIT_ROOT/bin/docker-compose" up "$@"
  
  # # install all kinds of packages used in the academic writing in the TeXLive 
  # nohup docker exec sharelatex tlmgr install scheme-full >> "$TOOLKIT_ROOT/install.log" 2>&1 &
}

__main__ "$@"
